/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // Use Google protobuf
    implementation 'com.google.protobuf:protobuf-java:3.18.1'

    // Use mockito
    testImplementation 'org.mockito:mockito-core:3.12.4' 

    // use postgresql
    implementation 'org.postgresql:postgresql:42.2.23'

    // This is used for sending email
        implementation 'com.sun.mail:javax.mail:1.6.2'
        implementation 'com.google.api-client:google-api-client:2.0.0'
        implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
        implementation 'com.google.apis:google-api-services-gmail:v1-rev20220404-2.0.0'
        implementation 'com.fasterxml.jackson.core:jackson-core:2.13.0'
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
        // Jackson JSON Google HTTP Client
        implementation 'com.google.http-client:google-http-client-jackson2:1.34.1'

}

application {
    // Define the main class for the application.
    mainClass = 'backend.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
